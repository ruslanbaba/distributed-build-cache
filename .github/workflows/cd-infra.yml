name: CD - Infrastructure (Terraform)
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Terraform Init
        working-directory: infrastructure/terraform
        run: terraform init -backend-config=../../env/backend.hcl

      - name: Terraform Format Check
        working-directory: infrastructure/terraform
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: infrastructure/terraform
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        working-directory: infrastructure/terraform
        run: |
          terraform plan -var-file=../../env/${{ github.event.inputs.environment }}.tfvars \
            -out=tfplan

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: infrastructure/terraform
        run: |
          terraform apply -var-file=../../env/${{ github.event.inputs.environment }}.tfvars \
            -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: infrastructure/terraform
        run: |
          terraform destroy -var-file=../../env/${{ github.event.inputs.environment }}.tfvars \
            -auto-approve

      - name: Save Plan Artifact
        if: github.event.inputs.action == 'plan'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.event.inputs.environment }}
          path: infrastructure/terraform/tfplan
