apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bazel-remote.fullname" . }}
  labels:
    {{- include "bazel-remote.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "bazel-remote.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "bazel-remote.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "bazel-remote.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: bazel-remote
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--experimental_remote_instance_name=build-cache"
            - "--gcs_bucket={{ .Values.gcs.bucket }}"
            - "--storage_mode=remote"
            - "--max_size=0" # enforced by pruner/GCS lifecycle
            - "--host=0.0.0.0"
            - "--port={{ .Values.service.portHttp }}"
            - "--grpc_port={{ .Values.service.portGrpc }}"
            - "--metrics_endpoint=/metrics"
            - "--enable_ac_key_instance_mangling"
            {{- if .Values.auth.basicAuth.enabled }}
            - "--htpasswd_file=/etc/bazel-remote/htpasswd"
            {{- end }}
          env:
            - name: GOOGLE_CLOUD_PROJECT
              value: {{ .Values.global.projectID | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.portHttp }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.portGrpc }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.auth.basicAuth.enabled }}
          volumeMounts:
            - name: htpasswd
              mountPath: /etc/bazel-remote
              readOnly: true
          {{- end }}
      {{- if .Values.auth.basicAuth.enabled }}
      volumes:
        - name: htpasswd
          secret:
            secretName: {{ include "bazel-remote.fullname" . }}-basic-auth
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
