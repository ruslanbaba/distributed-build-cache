apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-ai-predictor
  namespace: build-cache
  labels:
    app.kubernetes.io/name: cache-ai-predictor
    app.kubernetes.io/component: ml-prediction
    app.kubernetes.io/version: "2.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: cache-ai-predictor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cache-ai-predictor
        app.kubernetes.io/component: ml-prediction
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: cache-ai-predictor
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: ai-predictor
        image: gcr.io/PROJECT_ID/cache-ai-predictor:v2.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        env:
        - name: MODEL_ENDPOINT
          value: "https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/endpoints/ENDPOINT_ID"
        - name: VERTEX_AI_PROJECT
          value: "PROJECT_ID"
        - name: VERTEX_AI_REGION
          value: "us-central1"
        - name: CACHE_METRICS_ENDPOINT
          value: "http://prometheus.monitoring.svc.cluster.local:9090"
        - name: PREDICTION_WINDOW_HOURS
          value: "24"
        - name: CONFIDENCE_THRESHOLD
          value: "0.85"
        - name: ENABLE_GPU_ACCELERATION
          value: "true"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
            nvidia.com/gpu: 1
          limits:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: model-cache
          mountPath: /var/model-cache
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
        node-type: gpu-ml
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: cache-ai-predictor
              topologyKey: kubernetes.io/hostname
      volumes:
      - name: tmp
        emptyDir: {}
      - name: model-cache
        emptyDir:
          sizeLimit: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: cache-ai-predictor
  namespace: build-cache
  labels:
    app.kubernetes.io/name: cache-ai-predictor
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: grpc
    protocol: TCP
  selector:
    app.kubernetes.io/name: cache-ai-predictor

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cache-ai-predictor
  namespace: build-cache
  annotations:
    iam.gke.io/gcp-service-account: cache-ai-predictor@PROJECT_ID.iam.gserviceaccount.com

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cache-ai-predictor-hpa
  namespace: build-cache
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cache-ai-predictor
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: ai_prediction_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: cache-ai-predictor
  namespace: build-cache
spec:
  hosts:
  - cache-ai-predictor.build-cache.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: /predict
    route:
    - destination:
        host: cache-ai-predictor.build-cache.svc.cluster.local
        port:
          number: 80
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,reset,connect-failure,refused-stream
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: cache-ai-predictor.build-cache.svc.cluster.local
        port:
          number: 80
    timeout: 10s
